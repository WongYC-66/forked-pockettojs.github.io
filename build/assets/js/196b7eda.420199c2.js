"use strict";(self.webpackChunkpocketto_docs=self.webpackChunkpocketto_docs||[]).push([[6484],{3934:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var t=o(4848),s=o(8453);const r={sidebar_position:2,title:"Create a Node Module"},i=void 0,c={id:"extra/create-a-node-module",title:"Create a Node Module",description:"Introduction",source:"@site/docs/extra/create-a-node-module.md",sourceDirName:"extra",slug:"/extra/create-a-node-module",permalink:"/forked-pockettojs.github.io/docs/extra/create-a-node-module",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Create a Node Module"},sidebar:"tutorialSidebar",previous:{title:"Source Code Protection",permalink:"/forked-pockettojs.github.io/docs/extra/source-code-protection"}},l={},d=[{value:"Introduction",id:"introduction",level:3},{value:"Steps",id:"steps",level:3}];function a(e){const n={admonition:"admonition",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"This is a tutorial to guide you on how to create a Node module. You can create a Node module to share your code with others or to reuse your code in different projects. Such as Node.js, Bun.js or React.js."}),"\n",(0,t.jsxs)(n.admonition,{title:"Assumption",type:"info",children:[(0,t.jsxs)(n.p,{children:["This tutorial is assumed that you source code are all in ",(0,t.jsx)(n.code,{children:"src"})," folder, an you have a ",(0,t.jsx)(n.code,{children:"index.ts"})," file in the root directory of your project."]}),(0,t.jsxs)(n.p,{children:["If you have a different structure, you can modify the ",(0,t.jsx)(n.code,{children:"tsconfig.json"})," file to match your project structure."]})]}),"\n",(0,t.jsx)(n.h3,{id:"steps",children:"Steps"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Install the following packages:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install -D typescript @types/node ts-node tsconfig-paths eslint eslint-config-airbnb-base eslint-plugin-import jasmine ncp javascript-obfuscator tsc-alias nyc\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["Add the following scripts to your ",(0,t.jsx)(n.code,{children:"package.json"})," file:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:"title=package.json",children:'{\n  "name": "your-module-name",\n  "main": "dist/src/index.js",\n  "types": "dist/src/index.d.ts",\n  "scripts": {\n    "compile:type": "tsc --project tsconfig-node.json --declaration --declarationDir dist --emitDeclarationOnly && tsc-alias -p tsconfig-types.json",\n    "compile:browser": "tsc --project tsconfig-browser.json && tsc-alias -p tsconfig-browser.json && rm -Rf dist/node/mocks && rm -Rf dist/node/spec && rm -Rf dist/node/debug",\n    "compile:node": "tsc --project tsconfig-node.json && tsc-alias -p tsconfig.json && rm -Rf dist/browser/mocks && rm -Rf dist/browser/spec && rm -Rf dist/browser/debug",\n    "build": "npm run compile:type && npm run compile:browser && npm run compile:node && npm pack",\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Create 3 files in the root directory of your project:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="tsconfig-type.json"',children:'{\n  "compilerOptions": {\n    "baseUrl": ".",\n    "rootDir": ".",\n    "paths": {\n      "src/*": [\n        "./src/*"\n      ]\n    },\n    "lib": [\n      "ES2021"\n    ],\n    "outDir": "./dist",\n    "sourceMap": true,\n    "target": "ES2015",\n    "module": "CommonJS",\n    "moduleResolution": "node",\n    "resolveJsonModule": true,\n    "experimentalDecorators": true,\n    "esModuleInterop": true,\n    "declaration": false,\n    "strict": true,\n    "allowJs": true,\n    "skipLibCheck": true\n  },\n  "include": [\n    "src/",\n    "index.ts",\n    "**/*.tgz",\n    "**/*.patch"\n  ],\n  "exclude": [\n    "node_modules",\n    "**/__tests__/*",\n    "dist",\n    "spec/",\n    "mocks/",\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="tsconfig-node.json"',children:'{\n  "compilerOptions": {\n    "baseUrl": ".",\n    "rootDir": ".",\n    "paths": {\n      "src/*": [\n        "./src/*"\n      ]\n    },\n    "lib": [\n      "ES2021"\n    ],\n    "outDir": "./dist/node",\n    "sourceMap": true,\n    "target": "ES2015",\n    "module": "CommonJS",\n    "moduleResolution": "node",\n    "resolveJsonModule": true,\n    "experimentalDecorators": true,\n    "esModuleInterop": true,\n    "declaration": false,\n    "strict": true,\n    "allowJs": true,\n    "skipLibCheck": true\n  },\n  "include": [\n    "src/",\n    "index.ts",\n    "**/*.tgz",\n    "**/*.patch"\n  ],\n  "exclude": [\n    "node_modules",\n    "**/__tests__/*",\n    "dist",\n    "mocks/",\n    "spec/"\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="tsconfig-browser.json"',children:'{\n  "compilerOptions": {\n    "baseUrl": ".",\n    "rootDir": ".",\n    "paths": {\n      "src/*": [\n        "./src/*"\n      ]\n    },\n    "lib": [\n      "ES2021"\n    ],\n    "outDir": "./dist/browser",\n    "sourceMap": true,\n    "target": "ES2015",\n    "module": "ES2015",\n    "moduleResolution": "node",\n    "resolveJsonModule": true,\n    "experimentalDecorators": true,\n    "esModuleInterop": true,\n    "declaration": false,\n    "strict": true,\n    "allowJs": true,\n    "skipLibCheck": true\n  },\n  "include": [\n    "src/",\n    "index.ts",\n    "**/*.tgz",\n    "**/*.patch"\n  ],\n  "exclude": [\n    "node_modules",\n    "**/__tests__/*",\n    "dist",\n    "spec/",\n    "mocks/",\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"After complete the above steps, you can run the following command to build your module:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Then you will get a ",(0,t.jsx)(n.code,{children:"<your-module-name>.tgz"})," file in the root directory of your project. You can publish this file to npm, or share it with others."]}),"\n",(0,t.jsx)(n.p,{children:"Then run the following command in your destination project to install your module:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install <your-module-name>.tgz\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var t=o(6540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);