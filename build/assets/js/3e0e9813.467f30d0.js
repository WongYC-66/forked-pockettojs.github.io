"use strict";(self.webpackChunkpocketto_docs=self.webpackChunkpocketto_docs||[]).push([[8121],{6301:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>a});var n=i(4848),o=i(8453);const s={sidebar_position:3,title:"ID Generation"},d=void 0,r={id:"data-modelling/id",title:"ID Generation",description:"Introduction",source:"@site/docs/data-modelling/id.md",sourceDirName:"data-modelling",slug:"/data-modelling/id",permalink:"/forked-pockettojs.github.io/docs/data-modelling/id",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"ID Generation"},sidebar:"tutorialSidebar",previous:{title:"Query Builder",permalink:"/forked-pockettojs.github.io/docs/data-modelling/query-builder"},next:{title:"Relationship",permalink:"/forked-pockettojs.github.io/docs/data-modelling/relationship"}},c={},a=[{value:"Introduction",id:"introduction",level:3},{value:"Set id Method",id:"set-id-method",level:3}];function l(e){const t={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(t.p,{children:"Pocketto provides a way to generate unique ids for your data. You can set the id method to generate unique ids."}),"\n",(0,n.jsx)(t.h3,{id:"set-id-method",children:"Set id Method"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"import { p } from 'pocketto';\n\np.setIdMethod('uuid');\n"})}),"\n",(0,n.jsx)(t.p,{children:"Available id methods:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"uuid"})," - Generates a unique id via ",(0,n.jsx)(t.a,{href:"https://uuid7.com/",children:"uuidv7"}),", which is sort by time."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"shortid"})," - Generates a unique id using the ",(0,n.jsx)(t.a,{href:"https://www.npmjs.com/package/shortid",children:"shortid"})," package."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"timestamp"})," - Generates a unique id using the current timestamp. Format: ",(0,n.jsx)(t.code,{children:"YYYYMMDDHHmmssSSS"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"increment"})," - Generates a unique id by incrementing the previous id. It is useful for testing purposes."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"safe-increment"})," - Generates a unique id by incrementing the previous id with timestamp. Format: ",(0,n.jsx)(t.code,{children:"<RUNNING_NUMBER>-YYYYMMDDHHmmssSSS"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"custom"})," - Generates a unique id using the custom function you provide."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>d,x:()=>r});var n=i(6540);const o={},s=n.createContext(o);function d(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);