"use strict";(self.webpackChunkpocketto_docs=self.webpackChunkpocketto_docs||[]).push([[6622],{3913:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var i=n(4848),s=n(8453);const o={sidebar_label:"Svelte Stores",title:"Svelte Stores",sidebar_position:4},l=void 0,r={id:"frontend-api/pocketto-svelte",title:"Svelte Stores",description:"Svelte Stores API",source:"@site/docs/frontend-api/pocketto-svelte.md",sourceDirName:"frontend-api",slug:"/frontend-api/pocketto-svelte",permalink:"/docs/frontend-api/pocketto-svelte",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Svelte Stores",title:"Svelte Stores",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Vue Composables",permalink:"/docs/frontend-api/pocketto-vue"},next:{title:"Database Client Tools",permalink:"/docs/database-client-tools"}},a={},c=[{value:"Svelte Stores API",id:"svelte-stores-api",level:2},{value:"useRealtimeList",id:"userealtimelist",level:3},{value:"useRealtimeList - Configuration",id:"userealtimelist---configuration",level:3},{value:"useRealtime",id:"userealtime",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"svelte-stores-api",children:"Svelte Stores API"}),"\n",(0,i.jsx)(t.p,{children:"Pocketto provides a set of Svelte stores to interact with the Pocketto model in Vue."}),"\n",(0,i.jsx)(t.h3,{id:"userealtimelist",children:"useRealtimeList"}),"\n",(0,i.jsxs)(t.p,{children:["By using ",(0,i.jsx)(t.code,{children:"useRealtimeList()"})," composable, the listing will auto retrieve new model when there is new data."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",children:"<script>\n  import { onDestroy } from 'svelte';\n  import { goto } from '$app/navigation';\n  import { useRealtimeList } from 'pocketto-svelte';\n  import { SalesInvoice } from '../../models/SalesInvoice.p';\n\n  let salesInvoices = [] as SalesInvoice[];\n  const subscriber = useRealtimeList(SalesInvoice);\n  const unsubscribe = subscriber.subscribe((value) => (salesInvoices = value));\n  onDestroy(unsubscribe);\n<\/script>\n\n{#each salesInvoices as invoice}\n  <div on:click={() => goto(`/invoices/${invoice.id}`)}>\n    <h1>{invoice.number}</h1>\n  </div>\n{/each}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"userealtimelist---configuration",children:"useRealtimeList - Configuration"}),"\n",(0,i.jsxs)(t.p,{children:["There is also options that you can pass to ",(0,i.jsx)(t.code,{children:"useRealtimeList()"}),":"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["animationDelay: Delay in milliseconds to wait your custom animation done. Default: ",(0,i.jsx)(t.code,{children:"1ms"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["condition: A ",(0,i.jsx)(t.a,{href:"/docs/data-modelling/query-builder#complex-queries---callback",children:"query builder"})," condition to filter and sorting the data."]}),"\n",(0,i.jsxs)(t.li,{children:["onItemChange: Callback when the item is changed. After the ",(0,i.jsx)(t.code,{children:"animationDelay"})," is done, it will emit ",(0,i.jsx)(t.code,{children:"undefined"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["onItemCreate: Callback when the item is created. After the ",(0,i.jsx)(t.code,{children:"animationDelay"})," is done, it will emit ",(0,i.jsx)(t.code,{children:"undefined"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["onItemUpdate: Callback when the item is updated. After the ",(0,i.jsx)(t.code,{children:"animationDelay"})," is done, it will emit ",(0,i.jsx)(t.code,{children:"undefined"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",children:"<script>\n  import { onDestroy } from 'svelte';\n  import { goto } from '$app/navigation';\n  import { useRealtimeList } from 'pocketto-svelte';\n  import { SalesInvoice } from '../../models/SalesInvoice.p';\n\n  let salesInvoices = [] as SalesInvoice[];\n  const subscriber = useRealtimeList(SalesInvoice, {\n    animationDelay: 2000,\n    condition: (query) => query.where('status', 'draft').orderBy('date', 'desc'),\n    onItemChange: (item) => console.log('Item changed', item),\n    onItemCreate: (item) => console.log('Item created', item),\n    onItemUpdate: (item) => console.log('Item updated', item),\n  });\n  const unsubscribe = subscriber.subscribe((value) => (salesInvoices = value));\n  onDestroy(unsubscribe);\n<\/script>\n"})}),"\n",(0,i.jsx)(t.h3,{id:"userealtime",children:"useRealtime"}),"\n",(0,i.jsxs)(t.p,{children:["By using ",(0,i.jsx)(t.code,{children:"useRealtime()"})," hook, it will auto reflected to other similar page that have same model id."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",children:"<script>\n  import { onDestroy } from 'svelte';\n  import { useParams } from 'svelte-routing';\n  import { useRealtime } from 'pocketto-svelte';\n  import { SalesInvoice } from '../../models/SalesInvoice.p';\n\n  let invoice: SalesInvoice;\n  const { id } = useParams();\n  const subscriber = useRealtime(SalesInvoice, id);\n  const unsubscribe = subscriber.subscribe((value) => (invoice = value));\n  onDestroy(unsubscribe);\n<\/script>\n\n<div>\n  <h1>{invoice?.number}</h1>\n\n  <input type=\"text\" bind:value={invoice.number} />\n\n  {/* trigger save to submit to the database */}\n  <button on:click={() => invoice.save()}>Save</button>\n</div>\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var i=n(6540);const s={},o=i.createContext(s);function l(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);