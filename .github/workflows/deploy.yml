name: Deploy to GitHub Pages

on:
  push:
    branches:
      - source  # Trigger on pushes to the source branch

jobs:
  build:
    name: Build Docusaurus
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build website
        run: yarn build

      - name: Verify Build Output
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory does not exist. Exiting."
            exit 1
          else
            echo "Build directory exists."
          fi

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docusaurus-build
          path: build

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allows pushing to the `master` branch
      pages: write     # Allows deployment to GitHub Pages

    steps:
      - name: Check out `master` branch
        uses: actions/checkout@v4
        with:
          ref: master  # Check out the `master` branch

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: docusaurus-build  # Use the name given in the upload step

      - name: List Files After Download
        run: |
          echo "Listing files in the current directory:"
          ls -R  # List all files to see whatâ€™s present

      - name: Verify Build Artifact
        run: |
          if [ -z "$(ls -A .)" ]; then
            echo "No files found after downloading. Exiting."
            exit 1
          else
            echo "Files found after downloading."
          fi

      - name: Commit and Push to `master`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token for authentication
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .  # Add all files in the current directory
          git commit -m "Deploy Docusaurus site" || echo "No changes to commit"  # Prevents error if there are no changes
          git push origin master --force

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
